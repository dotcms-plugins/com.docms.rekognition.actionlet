apply plugin: 'application'
apply plugin: 'osgi'
apply plugin: 'war'
apply plugin: 'eclipse'

sourceCompatibility = '1.8'
version = '0.1'


repositories {
	maven {
        url "http://repo.dotcms.com/artifactory/libs-release"
    }
}
dependencies {
	compile fileTree(dir: 'src/main/resources/libs', include: '*.jar')
	
	compile group: 'com.amazonaws', name: 'aws-java-sdk-rekognition', version: '1.11.84'
	compile (group: 'com.dotcms', name: 'dotcms', version: '3.6.2'){
		transitive = true
	}


}
def tmpPath = "build/tmp/fragment"

task mani{

	doLast {
		new File( tmpPath + "/META-INF").mkdirs()
	
		def exportFragmentStr = '''\
Bundle-ManifestVersion: 2
Bundle-Name: System extra packages
Bundle-SymbolicName: fragment.rekognition.extra.packages
Bundle-Version: 1.0
Bundle-Description: Bundle exporting 3rdparty rekognition libs
Fragment-Host: system.bundle; extension:=framework
Export-Package: com.dotmarketing.image.filter,com.dotmarketing.portlets.contentlet.business,com.dotcms.repackage.org.osgi.framework,com.dotmarketing.osgi,com.dotmarketing.business,com.dotmarketing.exception,com.dotmarketing.portlets.contentlet.model,com.dotmarketing.portlets.structure.model,com.dotmarketing.portlets.workflows.actionlet,com.dotmarketing.portlets.workflows.model,com.dotmarketing.tag.business,org.junit,com.dotmarketing.tag.model,com.dotmarketing.util,com.dotmarketing.business
'''
		new File(tmpPath + "/META-INF/MANIFEST.MF").write(exportFragmentStr)
	}
}



task fragment(type: Zip, dependsOn: mani) {
	new File("build/libs").mkdirs()
   	from tmpPath
  	include '*'
   	include '*/*' //to include contents of a folder present inside Reports directory
   	archiveName 'rekognition-exports-fragment.jar'
   	destinationDir(file('build/libs'))
}



jar {
    manifest {
        name = 'Rekognition Actionlet'
        instruction 'Bundle-Vendor', 'dotcms'
        instruction 'Bundle-Description', 'dotCMS Rekognition Actionlet'
        instruction 'Bundle-DocURL', 'https://dotcms.com'
        instruction 'Bundle-Activator', 'com.dotcms.rekognition.actionlet.Activator'
        instruction 'DynamicImport-Package', '*'
        instruction 'Import-Package', '*;version=0'
    }

}
jar.dependsOn fragment




task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}

